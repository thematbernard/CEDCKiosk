@page "/reservationsAndTraining"
@inject IDialogService DialogService

<PageTitle>Reservations and Training</PageTitle>
<div Class="mud-theme-tertiary pa-5">
    <MudText Typo="Typo.h2" GutterBottom="true" Align="Align.Center">Reservations and Training</MudText>
</div>

<style>
    .fixed-card-height {
        height: 550px;
        overflow: hidden;
        max-width: 100vw;
        width: 100%;
        box-sizing: border-box;
    }
</style>

<MudGrid Class="pa-8" Justify="Justify.Center">
    @foreach (var resource in resourceList)
    {
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudCard Class="fixed-card-height">
                <MudCardMedia Image=@resource.ImagePath Height=250 />
                <div class="fixed-card-height">
                    <MudCardContent>
                        <MudText Style="font-size: clamp(14px,3vw,16px)" Typo="Typo.h5"><b>@resource.Title</b></MudText>
                        <MudText Style="font-size: clamp(14px,3vw,16px)" Class="pb-8" Typo="Typo.body2">@resource.Description</MudText>
                        <div style="text-align: center;">
                            @foreach (var chip in resource.Chip)
                            {
                                <MudChip Variant="Variant.Text" Color="Color.Primary">@chip</MudChip>
                            }
                        </div>
                    </MudCardContent>
                    <div style="text-align: center;">
                        <MudButton Color="Color.Primary" Href=@resource.Link Target="blank">Learn More</MudButton>
                    </div>
                </div>
            </MudCard>
        </MudItem>
    }
</MudGrid>


@code 
{
    private void OpenCustomDialog(MouseEventArgs e, string description, string bullet1, string bullet2, string bullet3, string ButtonTitle, string Link)

    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", description);
        parameters.Add("ButtonText", "Continue");
        parameters.Add("Bullet1", bullet1);
        parameters.Add("Bullet2", bullet2);
        parameters.Add("Bullet3", bullet3);
        parameters.Add("Color", Color.Primary);
        parameters.Add("ButtonTitle", ButtonTitle);
        parameters.Add("Link", Link);



        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };


        DialogService.Show<Dialog>("", parameters, options);
    }

    public class CustomDialogParameters
    {
        public string ContentText { get; set; }
        public string ButtonText { get; set; }
        public string Bullet1 { get; set; }
        public Color Color { get; set; }
    }


    private readonly List<(string ImagePath, string Title, string Description, string Link, string ButtonTitle, string Bullet1, string Bullet2, string Bullet3, string Dialogue, List<string> Chip)> resourceList = new()
    {
        ("/Images/cedc.png",
            "Training",
            "Looking for specific training on safety equipment?",
            "/Training",
            "Training",
            "",
            "",
            "",
            "Here is the text for the different trainings we are going to offer",
            new List<string> {"Students", "Faculty","Community Members"}),

        ("/Images/contact.jpg",
            "Equipment Reservation",
            "Explore, request, and access available assets",
            "/Equipment", 
            "Equipment Reservation",
            "",
            "",
            "",
            "Here is the text for the different assets we are going to offer",
            new List<string> {"Students", "Faculty","Community Members"}),

        ("/Images/engagement.jpg",
            "Room Reservation", 
            "Reserve a space at the Engagement Hub",
            "/roomReservation",
            "Room Reservation",
            "",
            "",
            "",
            "Here is the text for the Room Reservation",
            new List<string> {"Students", "Faculty","Community Members"}),
    };




}
